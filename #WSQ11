#include <iostream>
#include "BigIntegerLibrary.hh"
using namespace std;

int u;
int l;
int nat=0;
int non=0;
int ly=0;
BigInteger rev;
BigInteger num;

BigInteger reverse(BigInteger valid){
BigInteger invalid= 0;
while (valid != 0){
  invalid= invalid*10 + valid % 10;
  valid= valid/10;
}
  return invalid;
}

void pal(BigInteger n, BigInteger r){
  if(n == r){
nat = nat+1;
}
else {
int rep= 0;
BigInteger a= n;
while (a!=r && rep < 30){
a=a+r;
r= reverse(a);
rep= rep+1;
}
if (rep == 30){
  cout << "The number entered is a Lynchrel number: " << n << endl;
  ly= ly+1;
}
else {
  non=non+1;
     }
  }
}

int main (){
cout << "Let's se gow many Lycherel numbers we have" << endl;
 cout <<" Please, enter a lower bound:";
cin >> l;
cout << "Please, enter a upper bound: ";
cin >> u;
num = l;
while(num <= u){
rev= reverse(num);
pal(num, rev);
num = num + 1;
}

cout << "These numbers are between: " << l << " and " << u << endl;
cout << " The number of natural palindromes are " << nat << endl;
cout << " Total of non-Lycherel numbers: " << non << endl;
cout << "Finally the numbe of Lycherel numbers is: " << ly << endl;

return 0;
}
